# Automatic code formatting
name: "Code formatting"
on:
  push:
    branches:
    - "**"

env:
  python_version: "3.9"

jobs:
  format-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.python_version }}

      - name: Format modified python files
        run: |
          python3 -m pip install autopep8
          for FILE in $(git diff --name-only ${{ github.event.before }} | grep -E '.*\.py$')
          do
            autopep8 --in-place -a $FILE
            git add $FILE
          done

      - name: Format modified C++ files
        run: |
          for FILE in $(git diff --name-only ${{ github.event.before }} | grep -E '.*\.(cc|cpp|h|hpp)$')
          do
            clang-format -i -style=file $FILE
            git add $FILE
          done

      - name: Commit and create PR
        run: |
          HAS_CHANGES=$(git diff --staged --name-only)
          if [ ${#HAS_CHANGES} -gt 0 ]; then
            git config --global user.name mlcommons-bot
            git config --global user.email "mlcommons-bot@users.noreply.github.com"
            # Commit changes
            git commit -m '[Automated Commit] Format Codebase'
            git push
      
            # Push changes to a new branch
            #BRANCH_NAME="auto/code-format"
            #git branch $BRANCH_NAME
            #git push origin $BRANCH_NAME --force
      
            # Create a pull request to the "code-format" branch
            #gh pr create --base code-format --head $BRANCH_NAME --title "[Automated PR] Format Codebase" --body "This pull request contains automated code formatting changes."
          fi 
        # env:
        #  GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
