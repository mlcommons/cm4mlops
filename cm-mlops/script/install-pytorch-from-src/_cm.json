{
  "alias": "install-pytorch-from-src",
  "automation_alias": "script",
  "automation_uid": "5b4e0237da074764",
  "cache": true,
  "category": "Compiler automation",
  "deps": [
    {
      "tags": "detect,os"
    },
    {
      "tags": "detect,cpu"
    },
    {
      "tags": "get,python3",
      "skip_if_env": {
        "CM_CONDA_ENV": [ "yes" ]
      },
      "names": [
        "python",
        "python3"
      ]
    },
    {
      "env": {
        "CM_GIT_CHECKOUT_PATH_ENV_NAME": "CM_PYTORCH_SRC_REPO_PATH"
      },
      "extra_cache_tags": "pytorch,src,pytorch-src,pytorch-src-repo",
      "names": [
        "pytorch-src-repo"
      ],
      "tags": "get,git,repo",
      "update_tags_from_env_with_prefix": {
        "_branch.": [
          "CM_GIT_CHECKOUT"
        ],
        "_repo.": [
          "CM_GIT_URL"
        ],
        "_sha.": [
          "CM_GIT_CHECKOUT_SHA"
        ],
        "_tag.": [
          "CM_GIT_CHECKOUT_TAG"
        ]
      }
    }
  ],
  "env": {
    "CM_GIT_URL": "https://github.com/pytorch/pytorch"
  },
  "name": "Build pytorch from sources",
  "new_env_keys": [
    "CM_PYTORCH_*"
  ],
  "prehook_deps": [],
  "sort": 1000,
  "tags": [
    "install",
    "get",
    "src",
    "from.src",
    "pytorch",
    "src-pytorch"
  ],
  "uid": "64eaf3e81de94f41",
  "variations": {
    "branch.#": {
      "env": {
        "CM_GIT_CHECKOUT": "#"
      }
    },
    "repo.https://github.com/pytorch/pytorch": {
      "env": {
        "CM_GIT_URL": "https://github.com/pytorch/pytorch"
      },
      "group": "repo",
      "default": true 
    },
    "repo.#": {
      "env": {
        "CM_GIT_URL": "#"
      },
      "group": "repo"
    },
    "sha.#": {
      "env": {
        "CM_GIT_CHECKOUT_SHA": "#"
      }
    },
    "tag.#": {
      "env": {
        "CM_GIT_CHECKOUT_TAG": "#"
      },
      "ad": {
      "pytorch-src-repo": {
          "tags": "_no-recurse-submodules,_full-history"
        }
      }
    },
    "for-intel-mlperf-inference-v3.1-bert": {
      "base": [
        "tag.v1.12.0"
      ],
      "adr": {
        "conda-package": {
          "tags": "_name.bert-pt"
        }
      },
      "env": {
        "CM_CONDA_ENV": "yes",
        "CM_MLPERF_INFERENCE_INTEL": "yes"
      },
      "deps": [
        {
          "tags": "get,generic-sys-util,_libffi7"
        },
        {
          "tags": "get,conda,_name.bert-pt",
          "names": [ "conda" ]
        },
        {
          "names": [
            "conda-package",
            "ncurses"
          ],
          "tags": "get,generic,conda-package,_package.ncurses,_source.conda-forge"
        },
        {
          "names": [
            "conda-package",
            "python3"
          ],
          "tags": "get,generic,conda-package,_package.python",
          "version": "3.8"
        },
        {
          "tags": "install,llvm,src,_tag.llvmorg-15.0.7,_runtimes.libcxx:libcxxabi:openmp,_clang,_release,_for-intel-mlperf-inference-v3.1-bert"
        },
        {
          "names": [
            "conda-package",
            "ninja"
          ],
          "tags": "get,generic,conda-package,_package.ninja"
        },
        {
          "names": [
            "conda-package",
            "cmake"
          ],
          "tags": "get,generic,conda-package,_package.cmake"
        },
        {
          "names": [
            "conda-package",
            "mkl"
          ],
          "tags": "get,generic,conda-package,_package.mkl,_source.intel",
          "version": "2023.1.0"
        },
        {
          "names": [
            "conda-package",
            "mkl-include"
          ],
          "tags": "get,generic,conda-package,_package.mkl-include,_source.intel",
          "version": "2023.1.0"
        },
        {
          "names": [
            "conda-package",
            "intel-openmp"
          ],
          "tags": "get,generic,conda-package,_package.intel-openmp,_source.intel",
          "version": "2023.1.0"
        },
        {
          "names": [
            "conda-package",
            "llvm-openmp"
          ],
          "tags": "get,generic,conda-package,_package.llvm-openmp,_source.conda-forge"
        },
        {
          "names": [
            "conda-package",
            "jemalloc"
          ],
          "tags": "get,generic,conda-package,_package.jemalloc,_source.conda-forge"
        },
        {
          "names": [
            "conda-package",
            "wheel"
          ],
          "tags": "get,generic,conda-package,_package.wheel,_source.conda-forge"
        },
        {
          "names": [
            "conda-package",
            "setuptools"
          ],
          "tags": "get,generic,conda-package,_package.setuptools,_source.conda-forge"
        },
        {
          "names": [
            "conda-package",
            "future"
          ],
          "tags": "get,generic,conda-package,_package.future,_source.conda-forge"
        },
        {
          "names": [
            "conda-package",
            "libstdcxx-ng"
          ],
          "tags": "get,generic,conda-package,_package.libstdcxx-ng,_source.conda-forge"
        }
      ]
    },
    "for-nvidia-mlperf-inference-v3.1-gptj": {
      "base": [
        "sha.b5021ba9",
        "cuda"
      ],
      "env": {
        "CM_CONDA_ENV": "yes"
      },
      "deps": [
        {
          "tags": "get,conda,_name.nvidia"
        },
        {
          "tags": "get,cmake",
          "version_min": "3.25.0"
	      }
      ]
    },
    "cuda": {
      "deps": [
        {
          "tags": "get,cuda,_cudnn",
          "names": [ "cuda" ]
        }
      ],
      "env": {
        "CUDA_HOME": "<<<CM_CUDA_INSTALLED_PATH>>>",
        "CUDNN_LIBRARY_PATH": "<<<CM_CUDA_PATH_LIB_CUDNN>>>",
        "CUDNN_INCLUDE_PATH": "<<<CM_CUDA_PATH_INCLUDE_CUDNN>>>",
        "CUDA_NVCC_EXECUTABLE": "<<<CM_NVCC_BIN_WITH_PATH>>>"
      }
    }
  },
  "versions": {}
}
